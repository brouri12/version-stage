{% extends 'base.html.twig' %}
{% block title %}Fiche Produit - {{ product.nomProduit }}{% endblock %}
{% block body %}
<div class="container mx-auto px-4 py-8">
    <div class="max-w-3xl mx-auto bg-white rounded-lg shadow-md p-8">
        <div class="flex flex-col md:flex-row gap-8">
            <div class="flex-shrink-0 w-full md:w-1/2">
                {% set mainImage = null %}
                {% for i in product.images %}
                    {% if i.isMain and mainImage is null %}
                        {% set mainImage = i %}
                    {% endif %}
                {% endfor %}
                {% if mainImage is null %}{% set mainImage = product.images|first %}{% endif %}
                {% set initialLargeUrl = '' %}
                {% set initialColorKey = 'default' %}
                {% if mainImage %}
                    {% if mainImage.cloudinaryPublicId %}
                        {% set initialLargeUrl = cloudinary_large(mainImage.cloudinaryPublicId) %}
                    {% else %}
                        {% set initialLargeUrl = mainImage.url %}
                    {% endif %}
                    {% if mainImage.color %}{% set initialColorKey = mainImage.color.id %}{% endif %}
                {% else %}
                {% if product.cloudinaryPublicId %}
                        {% set initialLargeUrl = cloudinary_large(product.cloudinaryPublicId) %}
                {% elseif product.imageProduit %}
                    {% set imgPath = product.imageProduit starts with 'apploads/' ? product.imageProduit : 'apploads/' ~ product.imageProduit %}
                        {% set initialLargeUrl = asset(imgPath) %}
                    {% endif %}
                {% endif %}

                <div id="product-detail" class="flex items-start gap-4" data-initial="{{ initialColorKey }}" data-initial-url="{{ initialLargeUrl }}">
                    <div id="zoom-container" class="flex-1" style="overflow:hidden; border-radius:0.5rem; width:100%; max-width:500px; height:400px; position:relative; background:#fff;">
                        <img id="zoom-image" src="{{ initialLargeUrl }}" alt="{{ product.nomProduit }}" style="width:100%; height:100%; object-fit:contain; display:block; cursor:zoom-in; transition: opacity 0.2s;">
                        <button id="close-zoom-btn" type="button" style="display:none; position:absolute; top:10px; right:10px; z-index:10; background:#fff; border-radius:4px; border:1px solid #ccc; padding:4px 10px; font-size:0.9em; cursor:pointer;">Fermer le zoom</button>
                    </div>
                    </div>
                <div id="thumbnails" class="mt-3 grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 gap-2"></div>
                {% set grouped = {} %}
                {% for img in product.images %}
                    {% set colorKey = img.color ? img.color.id : 'default' %}
                    {% set largeUrl = img.cloudinaryPublicId ? cloudinary_large(img.cloudinaryPublicId) : img.url %}
                    {% set thumbUrl = img.cloudinaryPublicId ? cloudinary_thumbnail(img.cloudinaryPublicId) : img.url %}
                    {% set existing = grouped[colorKey]|default([]) %}
                    {% set existing = existing|merge([{ 'large': largeUrl, 'thumb': thumbUrl }]) %}
                    {% set grouped = grouped|merge({ (colorKey): existing }) %}
                {% endfor %}
                <script src="{{ asset('js/panzoom.min.js') }}"></script>
                <script type="application/json" id="product-data">{{ grouped|json_encode|raw }}</script>
                <script src="{{ asset('js/product-detail.js') }}"></script>
            </div>
            <div class="flex-1">
                <h1 class="text-3xl font-bold mb-4">{{ product.nomProduit }}</h1>
                <p class="text-gray-700 mb-4">{{ product.description }}</p>
                <p class="text-xl font-semibold text-blue-600 mb-2">{{ product.prixUnitaire }} TND</p>
                <p class="mb-2"><span class="font-semibold">Catégorie :</span> {{ product.categorie ? product.categorie.nomCategorie : '-' }}</p>
                <p class="mb-2"><span class="font-semibold">Genre :</span> {{ product.genre|capitalize }}</p>
                <p class="mb-2"><span class="font-semibold">Statut :</span> {{ product.statut|capitalize }}</p>
                {% if product.produitSizes|length > 0 %}
                    <div class="mb-2">
                        <span class="font-semibold">Tailles disponibles :</span>
                        <div class="flex flex-wrap gap-2 mt-1">
                            {% for size in product.produitSizes %}
                                {% if size.quantite > 0 %}
                                    <span class="inline-block bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">{{ size.size }}</span>
                                {% else %}
                                    <span class="inline-block bg-gray-100 text-gray-400 text-xs px-2 py-1 rounded-full line-through">{{ size.size }}</span>
                                {% endif %}
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}
                {% if product.colors|length > 0 %}
                    <div class="mb-4">
                        <span class="font-semibold">Couleurs :</span>
                        <div class="mt-2 flex flex-wrap gap-3">
                            {% for c in product.colors %}
                                {% set colorHex = c.hexCode ? c.hexCode|trim : '' %}
                                {% if colorHex and not (colorHex starts with '#') %}{% set colorHex = '#' ~ colorHex %}{% endif %}
                                <span class="inline-block w-7 h-7 rounded-full border border-gray-300 shadow-sm" title="{{ c.name }}"
                                      style="background-color: {{ colorHex ? colorHex : '#e5e7eb' }};"></span>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}
                {% if product.promotions|length > 0 %}
                    <p class="mb-2"><span class="font-semibold">Promotions :</span> {{ product.promotions|map(p => p.codePromotion)|join(', ') }}</p>
                {% endif %}
                <div class="mt-6">
                    <button type="button" id="addToCartBtn" class="w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors duration-200 font-semibold">Ajouter au panier</button>
                    <div id="addToCartMessage" class="mt-2 text-center text-sm"></div>
                </div>
                <script>
                document.addEventListener('DOMContentLoaded', function() {
                    const btn = document.getElementById('addToCartBtn');
                    const msg = document.getElementById('addToCartMessage');
                    btn.addEventListener('click', function() {
                        fetch("{{ path('app_panier_ajouter') }}", {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest',
                            },
                            body: JSON.stringify({
                                produit_id: {{ product.id }},
                                quantite: 1
                            })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                msg.textContent = 'Produit ajouté au panier !';
                                msg.className = 'mt-2 text-center text-green-600 text-sm';
                            } else {
                                msg.textContent = data.message || 'Erreur lors de l\'ajout au panier.';
                                msg.className = 'mt-2 text-center text-red-600 text-sm';
                            }
                        })
                        .catch(() => {
                            msg.textContent = 'Erreur lors de l\'ajout au panier.';
                            msg.className = 'mt-2 text-center text-red-600 text-sm';
                        });
                    });
                });
                </script>
            </div>
        </div>
    </div>
</div>
{% endblock %} 